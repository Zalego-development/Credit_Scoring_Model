# -*- coding: utf-8 -*-
"""credit_score.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YnThgb5qiyNhoSA0kMjCnZM3oNV5-1DM

## 1. Loading Data and Packages
"""

import pandas as pd
import numpy as np
import warnings
from sklearn.ensemble import RandomForestRegressor
warnings.filterwarnings('ignore')
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score,mean_absolute_error,mean_squared_error
from math import sqrt

df = pd.read_excel('MOCK_DAT.xlsx')
df.head()

data=df.drop(['id', 'first_name', 'last_name', 'email','ip_address','Grade','Unnamed: 22'],1)

objList=data.select_dtypes(include='object')

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

for feat in objList:
    data[feat] = le.fit_transform(data[feat].astype(str))

X=data.drop(['Score','Current_balance_Amt'],1)
Y=data[['Score','Current_balance_Amt']]

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state=300)

rforest=RandomForestRegressor(random_state=2,n_estimators=200,min_samples_split=3)
rforest.fit(x_train,y_train)
y_pred=rforest.predict(x_test)

MAE=mean_absolute_error(y_test,y_pred),
RMSE=np.sqrt(mean_squared_error(y_test,y_pred)),
R2_SCORE=r2_score(y_test, y_pred)
print(MAE,RMSE,R2_SCORE)

pred=np.int_(rforest.predict(data.drop(['Score','Current_balance_Amt'],axis=1)))

pred=pd.DataFrame(pred, columns=['Score_pred','Current_balance_Amt_pred'])
pred['Score']=data['Score']
pred['Current_balance_Amt']=data['Current_balance_Amt']
pred.head(20)

pred.shape

# Import pickle Package

import pickle

# Save the Modle to file in the current working directory
Pkl_Filename = "Pickle_RL_Model.pkl"  

with open(Pkl_Filename, 'wb') as file:  
    pickle.dump(rforest, file)

# Load the Model back from file
with open(Pkl_Filename, 'rb') as file:  
    Pickled_RF_Model = pickle.load(file)

Pickled_RF_Model

x_train.info()

"""#### Encoded values (Values before Categorical Encoding) """

objList.gender.value_counts()

data.gender.value_counts()

objList.Province.value_counts()

data.Province.value_counts()

objList.Marital_status.value_counts()

data.Marital_status.value_counts()

objList.Home_ownership.value_counts()

data.Home_ownership.value_counts()

